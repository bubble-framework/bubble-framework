name: Remove Preview Apps

on:
  pull_request:
    types: [closed]

env:
  REPO_NAME: ${{ github.event.repository.name }}
  PR_NUMBER: ${{ github.event.number }}

jobs:
  delete:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.BUBBLE_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.BUBBLE_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
    steps:
      - name: Missing AWS Credentials
        if: ${{ !env.AWS_SECRET_ACCESS_KEY && !env.AWS_ACCESS_KEY_ID }}
        run: exit 1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Retrieve commits
        uses: mathiasvr/command-output@v1
        id: previewappdata
        with:
          run: |
            aws dynamodb get-item --table-name ${{ env.REPO_NAME }}-PreviewApps --key '{ "PullRequestId": {"N": "${{ env.PR_NUMBER }}"}}'
      - name: Parse commits to get AWS Resource IDs
        uses: satackey/action-js-inline@v0.0.2
        id: getresourceids
        with:
          script: |
            const core = require('@actions/core')

            const pullRequestObj = ${{ steps.previewappdata.outputs.stdout }}
            const commitsArray = pullRequestObj.Item.Commits.L

            const [ buckets, distros, lambdas ] = [[], [], []]

            commitsArray.forEach(commit => {
              const bucketId = commit.M.BucketId.S

              buckets.push(bucketId)
              distros.push(commit.M.CloudFrontDistroId.S)
              lambdas.push(bucketId.split('-')[0])
            });

            core.setOutput('buckets', buckets.join(' '))
            core.setOutput('distros', distros.join(' '))
            core.setOutput('lambdas', lambdas.join(' '))
      - name: Delete all s3 buckets
        run: |
          for BUCKET in ${{ steps.getresourceids.outputs.buckets }}
          do
            aws s3 rb s3://$BUCKET --force
          done
      - name: Delete all Cloudfront distribution ids
        run: |
          sudo apt-get update
          sudo apt-get -y install jq
          for DISTRO in ${{ steps.getresourceids.outputs.distros }}
          do
            aws cloudfront get-distribution-config --id $DISTRO | jq .DistributionConfig.Enabled=false > tmp.json
            jq -r .DistributionConfig tmp.json > tmp2.json
            aws cloudfront update-distribution --id $DISTRO --if-match $(jq .ETag tmp.json -r) --distribution-config file://tmp2.json
            aws cloudfront wait distribution-deployed --id $DISTRO
            aws cloudfront delete-distribution --id $DISTRO --if-match $(aws cloudfront get-distribution-config --id $DISTRO | jq .ETag -r)
          done
